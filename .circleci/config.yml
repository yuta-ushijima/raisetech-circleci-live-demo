# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.0.0
  ansible-playbook: orbss/ansible-playbook@0.0.5
  ruby: circleci/ruby@1.8.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  execute-cloudformation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: deploy Cloudformation
          command: |
            set -x
            aws cloudformation deploy --stack-name sampleStackFromCirlceCI --template-file cloudformation/sampleStack.yml
  execute-ansible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "99:aa:df:0f:d2:ee:fe:c8:fb:4a:36:41:c8:88:77:01"
      - ansible-playbook/install:
          version: 2.10.3
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: "-u ec2-user -i ansible/hosts/inventory --private-key ~/.ssh/id_rsa"
  execute-serverspec:
    docker:
      - image: 'cimg/ruby:2.7-node'
    environment:
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: 'serverspec'
      - run:
          name: set env
          command: |
            echo "export TARGET_HOST=${TARGET_HOST}" >> $BASH_ENV
            echo "export TARGET_USER=${TARGET_USER}" >> $BASH_ENV
      - run:
          name: upload env.text
          command: |
            echo 'target_host: '${TARGET_HOST} >> env.txt
            echo 'target_user: '${TARGET_USER} >> env.txt
      - store_artifacts:
          path: env.txt
      - run:
          name: execute-serverspec
          command: |
            cd serverspec
            bundle exec rspec

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  raisetech-circleci-live-demo:
    jobs:
      - execute-cloudformation
      - execute-ansible:
          requires:
            - "execute-cloudformation"
      - execute-serverspec:
          requires:
            - execute-ansible

